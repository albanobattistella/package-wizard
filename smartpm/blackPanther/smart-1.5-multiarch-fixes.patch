diff -Nru smart-1.5.orig/smart/transaction.py smart-1.5/smart/transaction.py
--- smart-1.5.orig/smart/transaction.py	2014-12-28 15:24:37.000000000 +0100
+++ smart-1.5/smart/transaction.py	2015-10-10 13:49:33.130177897 +0200
@@ -22,6 +22,7 @@
 from smart.const import INSTALL, REMOVE, UPGRADE, FIX, REINSTALL, KEEP, LOCKED_EXCLUDE, LOCKED_INSTALL, LOCKED_CONFLICT, LOCKED_CONFLICT_BY, LOCKED_NO_COEXIST, LOCKED_SYSCONF, LOCKED_REMOVE
 from smart.cache import PreRequires, Package
 from smart import *
+from platform import uname
 
 def lock_reason(pkg, lockvalue):
     try:
@@ -505,6 +506,19 @@
         self._policy = policy and policy(self) or Policy(self)
         self._changeset = changeset or ChangeSet(cache)
         self._queue = queue or {}
+        (self.system, self.node, self.release, self.version, self.machine, self.processor) = uname()
+        if self.processor.startswith('arm'):
+            self.processor = 'arm'
+        elif self.processor == 'i686' or self.processor == 'pentium3' \
+            or self.processor == 'pentium4' or self.processor == 'athlon':
+            self.processor = 'i586'
+
+    def pkgVersionSplit(self, pkg):
+        (pkgver, pkgarch) = pkg.version.split('@')
+        if pkgarch == 'i686' or pkgarch == 'pentium3' \
+            or pkgarch == 'pentium4' or pkgarch == 'athlon':
+            pkgarch = 'i586'
+        return (pkgver, pkgarch)
 
     def clear(self):
         self._changeset.clear()
@@ -555,6 +569,8 @@
         changeset.set(pkg, INSTALL)
         isinst = changeset.installed
 
+        (pkgver, pkgarch) = self.pkgVersionSplit(pkg)
+
         # Remove packages conflicted by this one.
         for cnf in pkg.conflicts:
             for prv in cnf.providedby:
@@ -610,6 +626,9 @@
             found = False
             for prv in req.providedby:
                 for prvpkg in prv.packages:
+                    (prvpkgver, prvpkgarch) = self.pkgVersionSplit(prvpkg)
+                    if prvpkgarch != pkgarch and prvpkgarch != 'noarch' and prvpkgarch != self.processor:
+                        continue
                     if not reqrequired:
                         if sysconf.get("ignore-all-recommends", 0) == 1:
                             continue
@@ -635,11 +655,11 @@
                 # No packages provide it at all. Give up.
                 if reqrequired:
                     reasons = []
-                    for prv in req.providedby:
-                        for prvpkg in prv.packages:
-                            lockedres = lockedpkgs.get(prvpkg, None)
+                    for prvreq in req.providedby:
+                        for prvreqpkg in prvreq.packages:
+                            lockedres = lockedpkgs.get(prvreqpkg, None)
                             if lockedres:
-                                reasons.append(lock_reason(prvpkg, lockedres))
+                                reasons.append(lock_reason(prvreqpkg, lockedres))
                     if reasons:
                         raise Failed, _("Can't install %s: unable to install provider for %s:\n    %s") % \
                                 (pkg, req, '\n    '.join(reasons))
@@ -678,6 +698,8 @@
         changeset.set(pkg, REMOVE)
         isinst = changeset.installed
 
+        (pkgver, pkgarch) = self.pkgVersionSplit(pkg)
+
         # Check packages requiring this one.
         for prv in pkg.provides:
             for req in prv.requiredby:
@@ -692,15 +714,18 @@
                 # Check if someone installed is still providing it.
                 prvpkgs = {}
                 found = False
-                for prv in req.providedby:
-                    for prvpkg in prv.packages:
-                        if prvpkg is pkg:
+                for prvreq in req.providedby:
+                    for prvreqpkg in prvreq.packages:
+                        (prvreqpkgver, prvreqpkgarch) = self.pkgVersionSplit(prvreqpkg)
+                        if prvreqpkgarch != pkgarch and prvreqpkgarch != 'noarch' and prvreqpkgarch != self.processor:
                             continue
-                        if isinst(prvpkg):
+                        if prvreqpkg is pkg:
+                            continue
+                        if isinst(prvreqpkg):
                             found = True
                             break
-                        if prvpkg not in locked:
-                            prvpkgs[prvpkg] = True
+                        if prvreqpkg not in locked:
+                            prvpkgs[prvreqpkg] = True
                     else:
                         continue
                     break
@@ -713,7 +738,7 @@
 
                 if prvpkgs:
                     # There are other options, besides removing.
-                    pending.append((PENDING_REMOVE, pkg, prv, req.packages,
+                    pending.append((PENDING_REMOVE, pkg, req, req.packages,
                                     prvpkgs.keys()))
                 else:
                     # Remove every requiring package, or
@@ -1304,11 +1329,11 @@
                 # selected for installation provide the
                 # needed dependency.
                 found = False
-                for prv in req.providedby:
-                    for prvpkg in prv.packages:
-                        if (subset.get(prvpkg) is INSTALL or
-                            (prvpkg.installed and not
-                             subset.get(prvpkg) is REMOVE)):
+                for prvreq in req.providedby:
+                    for prvreqpkg in prvreq.packages:
+                        if (subset.get(prvreqpkg) is INSTALL or
+                            (prvreqpkg.installed and not
+                             subset.get(prvreqpkg) is REMOVE)):
                             found = True
                             break
                     else:
@@ -1320,12 +1345,12 @@
                 # Try to include some providing package
                 # that is selected for installation.
                 found = False
-                for prv in req.providedby:
-                    for prvpkg in prv.packages:
-                        if (set.get(prvpkg) is INSTALL and
-                            prvpkg not in locked):
+                for prvreq in req.providedby:
+                    for prvreqpkg in prvreq.packages:
+                        if (set.get(prvreqpkg) is INSTALL and
+                            prvreqpkg not in locked):
                             try:
-                                self.include(subset, prvpkg, locked)
+                                self.include(subset, prvreqpkg, locked)
                             except Error:
                                 pass
                             else:
@@ -1341,16 +1366,16 @@
                 # providing package which is already installed.
                 found = False
                 wasbroken = True
-                for prv in req.providedby:
-                    for prvpkg in prv.packages:
-                        if set.get(prvpkg) is not REMOVE:
+                for prvreq in req.providedby:
+                    for prvreqpkg in prvreq.packages:
+                        if set.get(prvreqpkg) is not REMOVE:
                             continue
                         wasbroken = False
                         # Package is necessarily in subset
                         # otherwise we wouldn't get here.
-                        if prvpkg not in locked:
+                        if prvreqpkg not in locked:
                             try:
-                                self.exclude(subset, prvpkg, locked)
+                                self.exclude(subset, prvreqpkg, locked)
                             except Error:
                                 pass
                             else:
