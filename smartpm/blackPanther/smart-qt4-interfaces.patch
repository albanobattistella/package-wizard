Summary: fixed the PyQt4 interface by blackPanther OS  
Contributors: Miklos Horvath, Charles Barcza - info AT blackpantheros.eu
--- smart-1.4.1/smart/interfaces.orig/qt4/changes.py	2010-12-03 23:08:06.000000000 +0100
+++ smart-1.4.1/smart/interfaces/qt4/changes.py	2015-06-16 12:57:38.000000000 +0200
@@ -1,3 +1,4 @@
+#-*- coding: utf-8 -*-
 #
 # Copyright (c) 2004 Conectiva, Inc.
 #
@@ -24,8 +25,15 @@
 from smart.util.strtools import sizeToStr
 from smart.report import Report
 from smart import *
-import PyQt4.QtGui as QtGui
-import PyQt4.QtCore as QtCore
+#import PyQt4.QtGui as QtGui
+#import PyQt4.QtCore as QtCore
+from PyQt4 import QtGui as QtGui
+from PyQt4 import QtCore as QtCore
+
+try:
+    _fromUtf8 = QtCore.QString.fromUtf8
+except AttributeError:
+    _fromUtf8 = lambda s: s
 
 class QtChanges(QtGui.QDialog):
 
@@ -79,7 +87,7 @@
         report = Report(changeset)
         report.compute()
         
-        class Sorter(str):
+        class Sorter(unicode):
             ORDER = [_("Remove"), _("Downgrade"), _("Reinstall"),
                      _("Install"), _("Upgrade")]
             def _index(self, s):
@@ -90,7 +98,7 @@
                     i += 1
                 return i
             def __cmp__(self, other):
-                return cmp(self._index(str(self)), self._index(str(other)))
+                return cmp(self._index(unicode(self)), self._index(unicode(other)))
             def __lt__(self, other):
                 return cmp(self, other) < 0
 
@@ -134,15 +142,13 @@
                 else:
                     install[pkg] = package
             if reinstall:
-                packages[Sorter(_("Reinstall (%d)") % len(reinstall))] = \
-                                                                    reinstall
+                packages[Sorter(_("Reinstall (%d)") % len(reinstall))] = reinstall
             if install:
                 packages[Sorter(_("Install (%d)") % len(install))] = install
             if upgrade:
                 packages[Sorter(_("Upgrade (%d)") % len(upgrade))] = upgrade
             if downgrade:
-                packages[Sorter(_("Downgrade (%d)") % len(downgrade))] = \
-                                                                    downgrade
+                packages[Sorter(_("Downgrade (%d)") % len(downgrade))] = downgrade
 
         if report.removed:
             remove = {}
@@ -164,8 +170,7 @@
                         package.setdefault(_("Conflicts"), []).append(cnfpkg)
                 remove[pkg] = package
             if remove:
-                packages[Sorter(_("Remove (%d)") % len(report.removed))] = \
-                                                                        remove
+                packages[Sorter(_("Remove (%d)") % len(report.removed))] = remove
 
         if keep:
             packages[Sorter(_("Keep (%d)") % len(keep))] = keep
diff -ruN interfaces.orig/qt4/channels.py interfaces/qt4/channels.py
--- smart-1.4.1/smart/interfaces.orig/qt4/channels.py	2011-03-01 17:00:47.000000000 +0100
+++ smart-1.4.1/smart/interfaces/qt4/channels.py	2015-06-14 17:10:50.000000000 +0200
@@ -1,3 +1,4 @@
+#-*- coding: utf-8 -*-
 #
 # Copyright (c) 2004 Conectiva, Inc.
 #
@@ -24,8 +25,8 @@
 from smart.const import NEVER
 from smart.channel import *
 from smart import *
-import PyQt4.QtGui as QtGui
-import PyQt4.QtCore as QtCore
+from PyQt4 import QtGui as QtGui
+from PyQt4 import QtCore as QtCore
 import textwrap
 import os
 
diff -ruN interfaces.orig/qt4/command.py interfaces/qt4/command.py
--- smart-1.4.1/smart/interfaces.orig/qt4/command.py	2010-12-03 23:08:06.000000000 +0100
+++ smart-1.4.1/smart/interfaces/qt4/command.py	2015-06-14 17:10:55.000000000 +0200
@@ -1,3 +1,4 @@
+#-*- coding: utf-8 -*-
 #
 # Copyright (c) 2004 Conectiva, Inc.
 #
@@ -22,8 +23,9 @@
 from smart.interfaces.qt4.interface import QtInterface
 from smart.interfaces.qt4 import getPixmap, centerWindow
 from smart import *
-import time
-import PyQt4 
+import time, sys
+from PyQt4 import *
+#import PyQt4 
 
 class QtCommandInterface(QtInterface):
 
@@ -33,21 +35,21 @@
 
     def showStatus(self, msg):
         self._status.show(msg)
-        while QtGui.QApplication.eventLoop().hasPendingEvents():
-            QtGui.QApplication.eventLoop().processEvents(QtGui.QEventLoop.AllEvents)
+        while QtCore.QEventLoop().isRunning():
+            QtGui.QCoreApplication.eventLoop().processEvents(QtGui.QEventLoop.AllEvents)
 
     def hideStatus(self):
         self._status.hide()
-        while QtGui.QApplication.eventLoop().hasPendingEvents():
-            QtGui.QApplication.eventLoop().processEvents(QtGui.QEventLoop.AllEvents)
+        while QtCore.QEventLoop().isRunning():
+            QtGui.QCoreApplication.eventLoop().processEvents(QtGui.QEventLoop.AllEvents)
 
     def run(self, command=None, argv=None):
         result = QtInterface.run(self, command, argv)        
         self._status.wait()
         while self._log.isVisible():
             time.sleep(0.1)
-            while QtGui.QApplication.eventLoop().hasPendingEvents():
-                QtGui.QApplication.eventLoop().processEvents(QtGui.QEventLoop.AllEvents)
+            while QtCore.QEventLoop().isRunning():
+                QtGui.QCoreApplication.eventLoop().processEvents(QtGui.QEventLoop.AllEvents)
         return result
 
 class QtStatus(object):
@@ -58,7 +60,9 @@
         self._window.setWindowTitle(_("Status"))
         self._window.setModal(True)
         self._vbox = QtGui.QWidget(self._window)
-        self._vbox.setMargin(20)
+        #self._vbox.setMargin(20)
+        #self._vbox.setMargin(0)
+        #self._vbox.setSpacing(5)
 
         self._label = QtGui.QLabel(self._vbox)
         self._label.show()
@@ -72,8 +76,8 @@
         self._window.show()
         centerWindow(self._window)
         self._lastshown = time.time()
-        while QtGui.QApplication.eventLoop().hasPendingEvents():
-            QtGui.QApplication.eventLoop().processEvents(QtGui.QEventLoop.AllEvents)
+        while QtCore.QEventLoop().isRunning():
+            QtCore.QEventLoop().processEvents(QtGui.QEventLoop.AllEvents)
 
     def hide(self):
         self._window.hide()
@@ -84,7 +88,7 @@
     def wait(self):
         while self.isVisible() and self._lastshown+3 > time.time():
             time.sleep(0.3)
-            while QtGui.QApplication.eventLoop().hasPendingEvents():
-                QtGui.QApplication.eventLoop().processEvents(QtGui.QEventLoop.AllEvents)
+            while QtCore.QEventLoop().isRunning():
+                QtCore.QEventLoop().processEvents(QtGui.QEventLoop.AllEvents)
 
 # vim:ts=4:sw=4:et
diff -ruN interfaces.orig/qt4/flags.py interfaces/qt4/flags.py
--- smart-1.4.1/smart/interfaces.orig/qt4/flags.py	2011-03-01 17:00:47.000000000 +0100
+++ smart-1.4.1/smart/interfaces/qt4/flags.py	2015-06-14 17:11:01.000000000 +0200
@@ -1,3 +1,4 @@
+#-*- coding: utf-8 -*-
 #
 # Copyright (c) 2004 Conectiva, Inc.
 #
@@ -21,8 +22,8 @@
 #
 from smart.interfaces.qt4 import getPixmap, centerWindow
 from smart import *
-import PyQt4.QtGui as QtGui
-import PyQt4.QtCore as QtCore
+from PyQt4 import QtGui as QtGui
+from PyQt4 import QtCore as QtCore
 import re
 
 TARGETRE = re.compile(r"^\s*(\S+?)\s*(?:([<>=]+)\s*(\S+))?\s*$")
diff -ruN interfaces.orig/qt4/__init__.py interfaces/qt4/__init__.py
--- smart-1.4.1/smart/interfaces.orig/qt4/__init__.py	2010-12-03 23:08:06.000000000 +0100
+++ smart-1.4.1/smart/interfaces/qt4/__init__.py	2015-06-14 17:10:32.000000000 +0200
@@ -1,4 +1,4 @@
-#
+#-*- coding: utf-8 -*-
 # Copyright (c) 2005 Canonical
 # Copyright (c) 2004 Conectiva, Inc.
 #
@@ -25,7 +25,7 @@
 import os
 
 try:
-    import PyQt4 
+    from PyQt4 import QtCore, QtGui
 except ImportError:
     from smart.const import DEBUG
     if sysconf.get("log-level") == DEBUG:
@@ -48,7 +48,7 @@
     if name not in _pixmap:
         filename = getImagePath(name)
         if os.path.isfile(filename):
-            pixmap = PyQt4.QtGui.QPixmap(filename)
+            pixmap = QtGui.QPixmap(filename)
             _pixmap[name] = pixmap
         else:
             raise Error, _("Image '%s' not found") % name
@@ -57,12 +57,12 @@
 def centerWindow(window):
     w = window.topLevelWidget()
     if w:
-        scrn = PyQt4.QtGui.QApplication.desktop().screenNumber(w)
-    elif PyQt4.QtGui.QApplication.desktop().isVirtualDesktop():
-        scrn = PyQt4.QtGui.QApplication.desktop().screenNumber(PyQt4.QtGui.QCursor.pos())
+        scrn = QtGui.QApplication.desktop().screenNumber(w)
+    elif QtGui.QApplication.desktop().isVirtualDesktop():
+        scrn = QtGui.QApplication.desktop().screenNumber(QtGui.QCursor.pos())
     else:
-        scrn = PyQt4.QtGui.QApplication.desktop().screenNumber(window)
-    desk = PyQt4.QtGui.QApplication.desktop().availableGeometry(scrn)
+        scrn = QtGui.QApplication.desktop().screenNumber(window)
+    desk = QtGui.QApplication.desktop().availableGeometry(scrn)
     window.move((desk.width() - window.frameGeometry().width()) / 2, \
                 (desk.height() - window.frameGeometry().height()) / 2)
 
diff -ruN interfaces.orig/qt4/interactive.py interfaces/qt4/interactive.py
--- smart-1.4.1/smart/interfaces.orig/qt4/interactive.py	2011-05-04 08:08:37.000000000 +0200
+++ smart-1.4.1/smart/interfaces/qt4/interactive.py	2015-06-14 17:11:08.000000000 +0200
@@ -1,3 +1,4 @@
+#-*- coding: utf-8 -*-
 #
 # Copyright (c) 2004 Conectiva, Inc.
 #
@@ -37,8 +38,8 @@
 from smart import *
 import shlex, re
 import fnmatch
-import PyQt4.QtGui as QtGui
-import PyQt4.QtCore as QtCore
+from PyQt4 import QtGui as QtGui
+from PyQt4 import QtCore as QtCore
 
 MENUBAR = [
     ( "file", [
@@ -818,7 +819,7 @@
     def setBusy(self, flag):
         if flag:
             QtGui.QApplication.setOverrideCursor( QtGui.QCursor(QtCore.Qt.WaitCursor) )
-            #while QtGui.QApplication.eventLoop().hasPendingEvents():
+            #while QtGui.QCoreApplication.eventLoop().hasPendingEvents():
             #    QtGui.QApplication.eventLoop().processEvents(QtGui.QEventLoop.AllEvents)
         else:
             QtGui.QApplication.restoreOverrideCursor()
diff -ruN interfaces.orig/qt4/interface.py interfaces/qt4/interface.py
--- smart-1.4.1/smart/interfaces.orig/qt4/interface.py	2010-12-03 23:16:54.000000000 +0100
+++ smart-1.4.1/smart/interfaces/qt4/interface.py	2015-06-14 17:11:13.000000000 +0200
@@ -1,3 +1,4 @@
+#-*- coding: utf-8 -*-
 #
 # Copyright (c) 2004 Conectiva, Inc.
 #
@@ -26,8 +27,8 @@
 from smart.fetcher import Fetcher
 from smart.const import DEBUG
 from smart import *
-import PyQt4.QtGui as QtGui
-import PyQt4.QtCore as QtCore
+from PyQt4 import QtGui as QtGui
+from PyQt4 import QtCore as QtCore
 import sys
 
 
@@ -51,10 +52,10 @@
         return result
 
     def eventsPending(self):
-        return QtGui.QApplication.instance().hasPendingEvents()
+        return QtGui.QCoreApplication.instance().hasPendingEvents()
     
     def processEvents(self):
-        QtGui.QApplication.instance().processEvents(QtCore.QEventLoop.AllEvents)
+        QtGui.QCoreApplication.instance().processEvents(QtCore.QEventLoop.AllEvents)
 
     def getProgress(self, obj, hassub=False):
         if hassub:
diff -ruN interfaces.orig/qt4/legend.py interfaces/qt4/legend.py
--- smart-1.4.1/smart/interfaces.orig/qt4/legend.py	2010-12-03 23:08:06.000000000 +0100
+++ smart-1.4.1/smart/interfaces/qt4/legend.py	2015-06-14 17:11:19.000000000 +0200
@@ -1,3 +1,4 @@
+#-*- coding: utf-8 -*-
 #
 # Copyright (c) 2004 Conectiva, Inc.
 #
@@ -21,8 +22,8 @@
 #
 from smart.interfaces.qt4 import getPixmap
 from smart import *
-import PyQt4.QtGui as QtGui
-import PyQt4.QtCore as QtCore
+from PyQt4 import QtGui as QtGui
+from PyQt4 import QtCore as QtCore
 
 class QtLegend(QtGui.QDialog):
 
diff -ruN interfaces.orig/qt4/log.py interfaces/qt4/log.py
--- smart-1.4.1/smart/interfaces.orig/qt4/log.py	2010-12-03 23:08:06.000000000 +0100
+++ smart-1.4.1/smart/interfaces/qt4/log.py	2015-06-14 17:11:26.000000000 +0200
@@ -1,3 +1,4 @@
+#-*- coding: utf-8 -*-
 #
 # Copyright (c) 2004 Conectiva, Inc.
 #
@@ -22,8 +23,8 @@
 from smart.const import ERROR, WARNING, DEBUG
 from smart.interfaces.qt4 import getPixmap
 from smart import *
-import PyQt4.QtGui as QtGui
-import PyQt4.QtCore as QtCore
+from PyQt4 import QtGui as QtGui
+from PyQt4 import QtCore as QtCore
 import locale
 
 try:
diff -ruN interfaces.orig/qt4/mirrors.py interfaces/qt4/mirrors.py
--- smart-1.4.1/smart/interfaces.orig/qt4/mirrors.py	2011-03-01 17:00:47.000000000 +0100
+++ smart-1.4.1/smart/interfaces/qt4/mirrors.py	2015-06-14 17:11:32.000000000 +0200
@@ -1,3 +1,4 @@
+#-*- coding: utf-8 -*-
 #
 # Copyright (c) 2004 Conectiva, Inc.
 #
@@ -21,8 +22,8 @@
 #
 from smart.interfaces.qt4 import getPixmap, centerWindow
 from smart import *
-import PyQt4.QtGui as QtGui
-import PyQt4.QtCore as QtCore
+from PyQt4 import QtGui as QtGui
+from PyQt4 import QtCore as QtCore
 
 class TextListViewItem(QtGui.QTreeWidgetItem):
     def __init__(self, parent):
diff -ruN interfaces.orig/qt4/packageinfo.py interfaces/qt4/packageinfo.py
--- smart-1.4.1/smart/interfaces.orig/qt4/packageinfo.py	2010-12-03 23:20:40.000000000 +0100
+++ smart-1.4.1/smart/interfaces/qt4/packageinfo.py	2015-06-14 17:11:37.000000000 +0200
@@ -1,3 +1,4 @@
+#-*- coding: utf-8 -*-
 #
 # Copyright (c) 2004 Conectiva, Inc.
 #
@@ -22,8 +23,8 @@
 from smart.interfaces.qt4.packageview import QtPackageView
 from smart.util.strtools import sizeToStr
 from smart import *
-import PyQt4.QtGui as QtGui
-import PyQt4.QtCore as QtCore
+from PyQt4 import QtGui as QtGui
+from PyQt4 import QtCore as QtCore
 
 class BackgroundScrollView(QtGui.QScrollArea):
     def __init__(self, parent):
diff -ruN interfaces.orig/qt4/packageview.py interfaces/qt4/packageview.py
--- smart-1.4.1/smart/interfaces.orig/qt4/packageview.py	2011-03-01 17:00:47.000000000 +0100
+++ smart-1.4.1/smart/interfaces/qt4/packageview.py	2015-06-14 17:11:43.000000000 +0200
@@ -1,3 +1,4 @@
+#-*- coding: utf-8 -*-
 #
 # Copyright (c) 2004 Conectiva, Inc.
 #
@@ -22,8 +23,8 @@
 from smart.interfaces.qt4 import getPixmap
 from smart.const import INSTALL, REMOVE
 from smart import *
-import PyQt4.QtGui as QtGui
-import PyQt4.QtCore as QtCore
+from PyQt4 import QtGui as QtGui
+from PyQt4 import QtCore as QtCore
 
 class PackageListViewItem(QtGui.QTreeWidgetItem):
     def __init__(self, parent, package = None):
diff -ruN interfaces.orig/qt4/priorities.py interfaces/qt4/priorities.py
--- smart-1.4.1/smart/interfaces.orig/qt4/priorities.py	2011-03-01 17:00:47.000000000 +0100
+++ smart-1.4.1/smart/interfaces/qt4/priorities.py	2015-06-14 17:11:48.000000000 +0200
@@ -1,3 +1,4 @@
+#-*- coding: utf-8 -*-
 #
 # Copyright (c) 2004 Conectiva, Inc.
 #
@@ -22,8 +23,8 @@
 from smart.interfaces.qt4 import getPixmap, centerWindow
 from smart.channel import getChannelInfo
 from smart import *
-import PyQt4.QtGui as QtGui
-import PyQt4.QtCore as QtCore
+from PyQt4 import QtGui as QtGui
+from PyQt4 import QtCore as QtCore
 
 class TextListViewItem(QtGui.QTableWidgetItem):
     def __init__(self, parent):
diff -ruN interfaces.orig/qt4/progress.py interfaces/qt4/progress.py
--- smart-1.4.1/smart/interfaces.orig/qt4/progress.py	2011-03-01 17:00:47.000000000 +0100
+++ smart-1.4.1/smart/interfaces/qt4/progress.py	2015-06-14 17:11:53.000000000 +0200
@@ -1,3 +1,4 @@
+#-*- coding: utf-8 -*-
 #
 # Copyright (c) 2004 Conectiva, Inc.
 #
@@ -23,8 +24,8 @@
 from smart.progress import Progress, INTERVAL
 from smart.interfaces.qt4 import getPixmap, centerWindow
 from smart import *
-import PyQt4.QtGui as QtGui
-import PyQt4.QtCore as QtCore
+from  PyQt4 import QtGui as QtGui
+from PyQt4 import QtCore as QtCore
 import posixpath
 import thread
 import time
@@ -124,8 +125,8 @@
         while not self._stopticking:
             self.lock()
             ## Note: it's NOT safe to call processEvents from threads other than main
-            #while QtGui.QApplication.instance().hasPendingEvents():
-            #    QtGui.QApplication.instance().processEvents()
+            #while QtGui.QCoreApplication.instance().hasPendingEvents():
+            #    QtGui.QCoreApplication.instance().processEvents()
             self.unlock()
             time.sleep(INTERVAL)
         self._ticking = False
@@ -228,8 +229,8 @@
             if self._hassub:
                 self._listview.update()
 
-        while QtGui.QApplication.instance().hasPendingEvents():
-            QtGui.QApplication.instance().processEvents()
+        while QtGui.QCoreApplication.instance().hasPendingEvents():
+            QtGui.QCoreApplication.instance().processEvents()
 
 
 def test():
@@ -249,8 +250,8 @@
         for i in range(0,subtotal+1):
             prog.setSub(n, i, subtotal, subdata=data)
             prog.show()
-            while QtGui.QApplication.instance().hasPendingEvents():
-                QtGui.QApplication.instance().processEvents()
+            while QtGui.QCoreApplication.instance().hasPendingEvents():
+                QtGui.QCoreApplication.instance().processEvents()
             time.sleep(0.01)
     prog.stop()
 
